#include<iostream>
#include<string>
using namespace std;
class Point2D {
    int x, y, * a;
public:
    Point2D(int x, int y) {
        this->x = x;
        this->y = y;
    }
    int getX() {
        return x;
    }
    void setX() {
        this->x = x;
    }
    void setY() {
        this->y = y;
    }
    int getY() {
        return y;
    }
    void setXY(int x, int y) {
        this->x = x;
        this->y = y;
    }
    int* getXY() {
        a = new int[2];
        a[0] = x;
        a[1] = y;
        return a;
    }
    ~Point2D() {
        if (a) {
            delete[] a;
        }
    }
};
class Point3D :public Point2D {
    int x, y, z, * a;
public:
    Point3D(int x, int y, int z) :Point2D(x, y) {
        this->z = z;
    }
    int getZ() {
        return z;
    }
    void setZ() {
        this->z = z;
    }
    void setXYZ(int x, int y, int z) {
        this->x = x;
        this->y = y;
        this->z = z;
    }
    int* getXYZ() {
        a = new int[3];
        a[0] = x;
        a[1] = y;
        a[2] = z;
        return a;
    }
    ~Point3D() {
        if (a) {
            delete[] a;
        }
    }
};
int main() {
    Point2D p(1, 3);
    cout <<"(x, y)"<<"=("<< p.getX() <<","<< p.getY()<<")"<< endl;
    Point3D q(2, 4, 6);
    cout << "(x, y, z)" << "=(" << q.getX() << "," << q.getY() <<","<<q.getZ()<< ")" << endl;
    return 0;
}
